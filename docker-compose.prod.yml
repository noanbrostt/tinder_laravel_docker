version: '3.8'

services:
  db:
    image: postgres:17
    container_name: tinder-postgres-prod
    restart: always
    volumes:
      - pg_data_tinder_prod:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: tinder
      POSTGRES_USER: tinder_user
      POSTGRES_PASSWORD: UX91*se%LR7
    healthcheck:
      # Testa se o servidor MySQL está respondendo a pings
      test: [ "CMD-SHELL", "pg_isready -q -U tinder_user -d tinder" ]
      interval: 10s # Tenta a cada 10 segundos
      timeout: 5s # Espera no máximo 5 segundos pela resposta
      retries: 5 # Tenta 5 vezes antes de marcar como "unhealthy"
    networks:
      - tinder-net
    ports:
      - "5432:5432"
  app:
    build:
      context: .
      dockerfile: Dockerfile.prod
    container_name: tinder-app-prod
    working_dir: /var/www
    volumes:
      - app_storage:/var/www/storage/app/public
    depends_on:
      db:
        condition: service_healthy
    networks:
      - tinder-net
    env_file:
      - .env.prod

  nginx:
    build:
      context: .
      dockerfile: docker/nginx/Dockerfile
    container_name: tinder-nginx-prod
    volumes:
      - app_storage:/var/www/storage/app/public:ro
    networks:
      - tinder-net
    ports:
      - "80:80"
    depends_on:
      - app

volumes:
  pg_data_tinder_prod:
  app_storage:


networks:
  tinder-net:
    driver: bridge
